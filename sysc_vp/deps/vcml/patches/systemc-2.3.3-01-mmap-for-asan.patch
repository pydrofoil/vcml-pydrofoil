diff -aruN 2.3.3/src/sysc/kernel/sc_cor_qt.cpp 2.3.3-01-asan-fix/src/sysc/kernel/sc_cor_qt.cpp
--- 2.3.3/src/sysc/kernel/sc_cor_qt.cpp	2018-10-13 10:19:07.000000000 +0200
+++ 2.3.3-01-asan-fix/src/sysc/kernel/sc_cor_qt.cpp	2021-07-29 19:54:05.265259317 +0200
@@ -49,6 +49,27 @@
 
 static sc_cor_qt* curr_cor = 0;
 
+// ----------------------------------------------------------------------------
+//  Sanitizer helpers
+// ----------------------------------------------------------------------------
+
+static void __sanitizer_start_switch_fiber(void** fake, void* stack_base,
+    size_t size) __attribute__((weakref("__sanitizer_start_switch_fiber")));
+static void __sanitizer_finish_switch_fiber(void* fake, void** stack_base,
+    size_t* size) __attribute__((weakref("__sanitizer_finish_switch_fiber")));
+
+static void __sanitizer_start_switch_cor_qt( sc_cor_qt* next ) {
+    if (&__sanitizer_start_switch_fiber != NULL) {
+        __sanitizer_start_switch_fiber( NULL, next->m_stack,
+                                        next->m_stack_size );
+    }
+}
+
+static void __sanitizer_finish_switch_cor_qt() {
+    if (&__sanitizer_finish_switch_fiber != NULL) {
+        __sanitizer_finish_switch_fiber( NULL, NULL, NULL );
+    }
+}
 
 // ----------------------------------------------------------------------------
 //  CLASS : sc_cor_qt
@@ -173,7 +194,8 @@
     sc_cor_qt* cor = new sc_cor_qt();
     cor->m_pkg = this;
     cor->m_stack_size = stack_size;
-    cor->m_stack = new char[cor->m_stack_size];
+    cor->m_stack = mmap(NULL, cor->m_stack_size, PROT_READ | PROT_WRITE,
+                        MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);
     void* sto = stack_align( cor->m_stack, QUICKTHREADS_STKALIGN,
                              &cor->m_stack_size );
     cor->m_sp = QUICKTHREADS_SP(sto, cor->m_stack_size - QUICKTHREADS_STKALIGN);
@@ -190,6 +212,7 @@
 sc_cor_qt_yieldhelp( qt_t* sp, void* old_cor, void* )
 {
     reinterpret_cast<sc_cor_qt*>( old_cor )->m_sp = sp;
+    __sanitizer_finish_switch_cor_qt();
     return 0;
 }
 
@@ -199,6 +222,7 @@
     sc_cor_qt* new_cor = static_cast<sc_cor_qt*>( next_cor );
     sc_cor_qt* old_cor = curr_cor;
     curr_cor = new_cor;
+    __sanitizer_start_switch_cor_qt( new_cor );
     QUICKTHREADS_BLOCK( sc_cor_qt_yieldhelp, old_cor, 0, new_cor->m_sp );
 }
 
diff -aruN 2.3.3/src/sysc/kernel/sc_cor_qt.h 2.3.3-01-asan-fix/src/sysc/kernel/sc_cor_qt.h
--- 2.3.3/src/sysc/kernel/sc_cor_qt.h	2018-10-13 10:19:07.000000000 +0200
+++ 2.3.3-01-asan-fix/src/sysc/kernel/sc_cor_qt.h	2021-07-29 19:55:16.669260145 +0200
@@ -33,6 +33,8 @@
 
 #if !defined(_WIN32) && !defined(WIN32) && !defined(WIN64)  && !defined(SC_USE_PTHREADS)
 
+#include <sys/mman.h> // for munmap
+
 #include "sysc/kernel/sc_cor.h"
 #include "sysc/packages/qt/qt.h"
 
@@ -58,8 +60,10 @@
 	{}
 
     // destructor
-    virtual ~sc_cor_qt()
-        { delete[] (char*) m_stack; }
+    virtual ~sc_cor_qt() {
+        if (m_stack)
+            munmap(m_stack, m_stack_size);
+    }
 
     // switch stack protection on/off
     virtual void stack_protect( bool enable );
